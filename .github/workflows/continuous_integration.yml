name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened, synchronize ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: cache-${{ hashFiles('**/Cargo.lock') }}
          cache-on-failure: true
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  rustfmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Dependencies
        id: rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: cache-${{ hashFiles('**/Cargo.lock') }}
          cache-on-failure: true
      - name: Install Rust
        if: ${{ !steps.rust-cache.outputs.cache-hit }}
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Check Formatting
        run: cargo fmt --all --check
      - name: Check Clippy
        run: cargo clippy -- --deny warnings
